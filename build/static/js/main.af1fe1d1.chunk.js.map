{"version":3,"sources":["services/api.js","assets/images/logo.png","components/CompareList/index.js","pages/Main/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","CompareList","repositories","className","map","repository","src","owner","avatar_url","alt","login","name","stargazers_count","forks_count","open_issues_count","lastCommit","id","Main","props","handleSubmit","e","a","preventDefault","setState","loading","get","state","repositoryInput","data","moment","pushed_at","fromNow","repositoryError","handleInputChange","target","value","logo","onSubmit","this","type","placeholder","onChange","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,4B,iBCHI,MAA0B,iC,eC0D1BC,EArDK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACrB,OACE,qBAAKC,UAAU,yBAAf,SACGD,EAAaE,KAAI,SAACC,GAAD,OAChB,sBAAKF,UAAU,aAAf,UACE,mCACE,qBACEG,IAAKD,EAAWE,MAAMC,WACtBC,IAAKJ,EAAWE,MAAMG,QAExB,iCAASL,EAAWM,OACpB,uBAAOR,UAAU,QAAjB,SAA0BE,EAAWE,MAAMG,WAG7C,+BACE,+BACGL,EAAWO,iBAAkB,IAC9B,uBAAOT,UAAU,OAAjB,sBAEF,+BACGE,EAAWQ,YADd,IAC2B,uBAAOV,UAAU,OAAjB,sBAE3B,+BACGE,EAAWS,kBAAmB,IAC/B,uBAAOX,UAAU,OAAjB,uBAEF,+BACGE,EAAWU,WAAY,IACxB,uBAAOZ,UAAU,OAAjB,iCAxB2BE,EAAWW,UCC/BC,G,8DACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAVmB,uCAUJ,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAEE,iBAEF,EAAKC,SAAS,CAAEC,SAAS,IAHZ,kBAMwB3B,EAAI4B,IAAJ,iBACvB,EAAKC,MAAMC,kBAPZ,iBAMGtB,EANH,EAMHuB,MAIGb,WAAac,IAAOxB,EAAWyB,WAAWC,UAErD,EAAKR,SAAS,CACZI,gBAAiB,GACjBzB,aAAa,GAAD,mBAAM,EAAKwB,MAAMxB,cAAjB,CAA+BG,IAC3C2B,iBAAiB,IAfR,kDAkBX,EAAKT,SAAS,CAAES,iBAAiB,IAlBtB,yBAoBX,EAAKT,SAAS,CAAEC,SAAS,IApBd,6EAVI,wDAkCnBS,kBAAoB,SAACb,GACnB,EAAKG,SAAS,CAAEI,gBAAiBP,EAAEc,OAAOC,SAjC1C,EAAKT,MAAQ,CACXC,gBAAiB,GACjBzB,aAAc,GACd8B,iBAAiB,EACjBR,SAAS,GANM,E,0CAsCnB,WACE,OACE,sBAAKrB,UAAU,iBAAf,UACE,qBAAKG,IAAK8B,EAAM3B,IAAI,mBAEpB,uBAAM4B,SAAUC,KAAKnB,aAArB,WACmC,IAA/BmB,KAAKZ,MAAMM,iBACX,uBACEO,KAAK,OACLC,YAAY,oBACZL,MAAOG,KAAKZ,MAAMC,gBAClBc,SAAUH,KAAKL,sBAGe,IAA/BK,KAAKZ,MAAMM,iBACV,uBACEO,KAAK,OACLpC,UAAU,cACVqC,YAAY,oBACZL,MAAOG,KAAKZ,MAAMC,gBAClBc,SAAUH,KAAKL,oBAIrB,wBAAQM,KAAK,SAAb,SACGD,KAAKZ,MAAMF,QACV,mBAAGrB,UAAU,2BAEb,SAKN,cAAC,EAAD,CAAaD,aAAcoC,KAAKZ,MAAMxB,sB,GAxEZwC,c,MCFnBC,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af1fe1d1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/'\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/logo.dbaeb104.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CompareList.css';\n\nconst CompareList = ({ repositories }) => {\n  return (\n    <div className='compare-list-container'>\n      {repositories.map((repository) => (\n        <div className='repository' key={repository.id}>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <strong>{repository.name}</strong>\n            <small className='owner'>{repository.owner.login}</small>\n          </header>\n\n          <ul>\n            <li>\n              {repository.stargazers_count}{' '}\n              <small className='info'>stars</small>\n            </li>\n            <li>\n              {repository.forks_count} <small className='info'>forks</small>\n            </li>\n            <li>\n              {repository.open_issues_count}{' '}\n              <small className='info'>issues</small>\n            </li>\n            <li>\n              {repository.lastCommit}{' '}\n              <small className='info'>last commit</small>\n            </li>\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCompareList.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      owner: PropTypes.shape({\n        login: PropTypes.string,\n        avatar: PropTypes.string,\n      }),\n      stargazers_count: PropTypes.number,\n      forks_count: PropTypes.number,\n      open_issues_count: PropTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default CompareList;\n","import React, { Component } from 'react';\nimport api from '../../services/api';\nimport moment from 'moment';\n\nimport logo from '../../assets/images/logo.png';\nimport CompareList from '../../components/CompareList';\nimport './Main.css';\nimport '../../../node_modules/font-awesome/css/font-awesome.css';\n\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repositoryInput: '',\n      repositories: [],\n      repositoryError: false,\n      loading: false,\n    };\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    try {\n      const { data: repository } = await api.get(\n        `/repos/${this.state.repositoryInput}`\n      );\n\n      repository.lastCommit = moment(repository.pushed_at).fromNow();\n\n      this.setState({\n        repositoryInput: '',\n        repositories: [...this.state.repositories, repository],\n        repositoryError: false,\n      });\n    } catch (err) {\n      this.setState({ repositoryError: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ repositoryInput: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className='main-container'>\n        <img src={logo} alt='Github Compare'/>\n\n        <form onSubmit={this.handleSubmit}>\n          {(this.state.repositoryError === false && (\n            <input\n              type='text'\n              placeholder='user / repository'\n              value={this.state.repositoryInput}\n              onChange={this.handleInputChange}\n            />\n          )) ||\n            (this.state.repositoryError === true && (\n              <input\n                type='text'\n                className='input-error'\n                placeholder='user / repository'\n                value={this.state.repositoryInput}\n                onChange={this.handleInputChange}\n              />\n            ))}\n\n          <button type='submit'>\n            {this.state.loading ? (\n              <i className='fa fa-spinner fa-pulse' />\n            ) : (\n              '+'\n            )}\n          </button>\n        </form>\n\n        <CompareList repositories={this.state.repositories} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Main from './pages/Main';\nimport './App.css';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}